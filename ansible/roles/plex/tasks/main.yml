---

- name: Set EFS mount point to "{{ efs_mount_stage }}"
  set_fact:
    efs_mount: "{{ efs_mount_stage }}"
  when: env == "stage"

- name: Set EFS mount point to "{{ efs_mount_prod }}"
  set_fact:
    efs_mount: "{{ efs_mount_prod }}"
  when: env == "prod"

## Create Plex user and group
- name: Create plex group
  group:
    name: "{{ plex_group }}"
    state: present
    gid: "{{ plex_id }}"

- name: Create plex user
  user:
    name: "{{ plex_user }}"
    shell: /bin/bash
    state: present
    uid: "{{ plex_id }}"
    group: "{{ plex_group }}"

## Mount shared EFS for Plex config
- name: "Create shared NFS mount point"
  file:
    state: directory
    path: "{{ config_root }}"
    mode: 0755
    owner: "{{ plex_user }}"
    group: "{{ plex_group }}"

- name: "Mount shared EFS as NFS"
  mount:
    name: "{{ config_root }}"
    src: "{{ efs_mount }}/"
    state: mounted
    fstype: nfs
    opts: "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport"

- name: Create plex config directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
    owner: "{{ plex_user }}"
    group: "{{ plex_group }}"
  with_items:
    - "{{ config_plex_shared }}"
    - "{{ config_plex_shared }}/config"
    - "{{ config_plex_local }}/config"
    - "{{ config_plex_local }}/transcode"
    - "{{ plex_data }}"
    - "{{ plex_data }}/Media"

- name: Check if local plex Library exists
  stat:
    path: "{{ config_plex_local }}/config/Library"
  register: plex_library

- name: Synchronize plex local and shared config
  synchronize:
    src: "{{ config_plex_shared }}/config"
    dest: "{{ config_plex_local }}"
  delegate_to: "{{ inventory_hostname }}"
  when: plex_library.stat.exists == False

- name: Import Plex config backup script
  template:
    src: plex_backup.sh.j2
    dest: "{{ config_plex_local }}/plex_backup.sh"
    mode: 0755
    owner: "{{ plex_user }}"
    group: "{{ plex_group }}"

- name: Cron job to backup plex config
  cron:
    name: "backup plex config"
    special_time: hourly
    job: "{{ config_plex_local }}/plex_backup.sh"

## Download, configure, and deploy Plex container
- name: pull the plex docker image
  docker_image:
    name: "plexinc/pms-docker"

- name: Start the plex docker container
  docker_container:
    image: "plexinc/pms-docker"
    name: "{{ docker_plex_container_name }}"
    env:
      PLEX_UID: "{{ plex_id }}"
      PLEX_GID: "{{ plex_id }}"
      VERSION: '{{ docker_plex_version }}'
    volumes:
      - '{{ config_plex_local }}/transcode:/transcode'
      - '{{ config_plex_local }}/config:/config'
      - '{{ plex_data }}/Media:/data'
    network_mode: host
    state: started
    restart_policy: always
    log_driver: syslog

- debug:
    msg:
      - "Manual config requried."
      - "setup ssh tunnel - ssh alfred@ip.address.of.server -L 8888:localhost:32400"
      - "Type http://localhost:8888/web into your browser's address bar and configure server"
