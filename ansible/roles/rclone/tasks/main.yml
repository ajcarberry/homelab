---

- include_vars: keys.yml

- name: Install prerequisites
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - unzip
    - man-db

## Create downloaders group
- name: Create downloader group
  group:
    name: "{{ downloader_group }}"
    state: present
    gid: "{{ downloader_id }}"

- name: Create temp rclone download folder
  file:
    path: "{{ rclone_setup_tmp_dir}}"
    state: directory
    mode: 0775

- name: Unzip rclone
  unarchive:
    src: https://github.com/ncw/rclone/releases/download/v{{ rclone_version }}/rclone-v{{ rclone_version }}-linux-amd64.zip
    dest: "{{ rclone_setup_tmp_dir}}"
    copy: no
    creates: '/tmp/rclone_setup/rclone-v{{ rclone_version }}-linux-amd64'
  when: not ansible_check_mode

- name: Copy rclone binary
  copy:
    src: "{{ rclone_setup_tmp_dir}}/rclone-v{{ rclone_version }}-linux-amd64/rclone"
    dest: "/usr/bin/rclone"
    mode: 0755
    owner: root
    group: root
    remote_src: true
  when: not ansible_check_mode

- name: Make dir for rclone local manpages
  file:
    path: '{{ man_pages_path }}'
    state: directory
    mode: 0775
    owner: '{{ rclone_user }}'
    group: '{{ rclone_group }}'

- name: Copy rclone manpages
  copy:
    src: "{{ rclone_setup_tmp_dir}}/rclone-v{{ rclone_version }}-linux-amd64/rclone.1"
    dest: "{{ man_pages_path }}/rclone.1"
    mode: 0644
    owner: root
    group: root
    remote_src: true
  when: not ansible_check_mode

- name: Install rclone manpages
  shell: mandb
  become: yes
  changed_when: false

- name: Create rclone directories
  file:
    path: '{{ item }}'
    state: directory
    mode: 0775
    owner: '{{ rclone_user }}'
    group: '{{ downloader_group }}'
  with_items:
    - '{{ config_rclone_mnt }}'
    - '{{ config_rclone_logs }}'
    - '{{ config_rclone_upload }}'

- name: Import rclone.service
  template:
    src: rclone.service.j2
    dest: /etc/systemd/system/rclone.service
  notify: reload systemd and restart rclone

- name: Ensure that Docker waits for rclone to mount before starting
  lineinfile:
    dest: /lib/systemd/system/docker.service
    backrefs: True
    state: present
    regexp: '(^After=((?!rclone.service).)*$)'
    line: '\1 rclone.service'

- name: Ensure that Docker fails if rclone mount fails
  lineinfile:
    dest: /lib/systemd/system/docker.service
    backrefs: True
    state: present
    regexp: '(^Requires=((?!rclone.service).)*$)'
    line: '\1 rclone.service'

- name: Make dir for rclone config
  file:
    path: "{{ config_rclone }}"
    state: directory
    mode: 0775
    owner: '{{ rclone_user }}'
    group: '{{ rclone_group }}'

- name: Import rclone config
  template:
    src: rclone.conf.j2
    dest: "{{ config_rclone }}/rclone.conf"

- name: Start and enable rclone service
  systemd:
    state: started
    name: rclone

- name: Force all notified handlers to run at this point
  meta: flush_handlers
